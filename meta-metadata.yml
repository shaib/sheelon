preamble:
  title: ניתוח שאלון שלומות
  description_html: |-
    <p>הצגה של נתונים מתוך שאלון שלמות, עם אפשרות לחיתוכים.</p>
    <ul>
      <li>זוהי גרסה ראשונית בלבד</li>
    </ul>

  databases: "We place the key early, but value will be rewritten"

  allow:
    id:
      - superuser
      - root

  plugins:
    datasette-auth-passwords:
      superuser_password_hash:
        $env: PASSWORD_HASH_SUPER_1

dashboard:
  name: shlomut
  static:
    title: שאלון שלומות
    description: שאלון עם דמוגרפיה
    filters:
      # This defines the editable fields at the top. The keys here
      # ('a_gender', 'b_vetekedu_low' etc) are used in the queries
      # for including the field values as variables. The order
      # of fields on top is the order of names, hence "a_" etc.
      # The titles of columns in the CSV files are not part of
      # this definition, they're only in the query (see below).
      a_gender:
        name: מגדר
        type: select
        options: [גבר, אישה, מעדיף/ה לא לציין]
      b_gen_expr_low:
        name: מינ ותק בחינוך
        type: number
        min: 0
        max: 100
        step: 1
      c_gen_expr_high:
        name: מקס ותק בחינוך
        type: number
        min: 0
        max: 100
        step: 1
      d_local_expr_low:
        name: מינ ותק בחינוך במ״א אשכול
        type: number
        min: 0
        max: 100
        step: 1
      e_local_expr_high:
        name: מקס ותק בחינוך במ״א אשכול
        type: number
        min: 0
        max: 100
        step: 1
      f_position:
        name: תפקיד
        type: select
        options:
          - יועץ/ת
          - מורה מקצוע
          - מורה/ת שילוב
          - מחנכ/ת
          - מתנדב/ת
          - סייע/ת גיל הרך
          - סייע/ת חינוך מיוחד
          - תומך/ת הוראה
      g_school:
        name: בית ספר
        type: select
        options:
          - מרחבי אשכול
          - נופי הבשור
          - נעם נצרים בנות
          - נעם נצרים בנים
          - קידום הנוער
          - שדות אשכול
          - שחר אשכול

    charts:
      # This chart, defined by Markdown, is constant
      t1:
        library: markdown
        display: |-
          # שאלון שלומות
          > מידע גולמי מעובד להצגה

    layout:
      # Every row says which charts are in it
      # A '.' means "no chart in this spot"
      # t1 is defined above, "main_metrics" is defined
      # dynamically by code, and the code also adds more
      # charts and extends the layout to include them
      - [t1, filter_stats]
      - [main_metrics, '.']
          
  generate:
    # Under "query" are the definitions used to fetch the data
    # for each generated chart
    query:
      # The preamble is included in every query. It's a template
      # here because the name of the database table is a parameter
      # the parts in [[ ]] are added by the dashboards system, at
      # runtime, only when the relevant filter is set
      #
      # The lower parts of the preamble (from "t AS (SELECT" to
      # the end) take care of not showing data when there are
      # too little results
      preamble_template: WITH
        filtered AS (
          SELECT * FROM "{table_name}" WHERE TRUE
            [[ AND "מגדר" = :a_gender ]]
            [[ AND "שנות ותק בחינוך/בהוראה" >= :b_gen_expr_low ]]
            [[ AND "שנות ותק בחינוך/בהוראה" <= :c_gen_expr_high ]]
            [[ AND "שנות וותק במערכת החינוך במועצה איזורית אשכול" >= :d_local_expr_low ]]
            [[ AND "שנות וותק במערכת החינוך במועצה איזורית אשכול" <= :e_local_expr_high ]]
            [[ AND "תפקידך במערכת החינוך:" = :f_position ]]
            [[ AND "שם בית הספר" = :g_school ]]
          ),
        t AS (SELECT COUNT(*) AS total_count FROM filtered),
        data AS (
          SELECT filtered.* FROM filtered CROSS JOIN t WHERE total_count>5
        )
      # These define the data fetched for each chart (by columns)

      filter_stats:
        nominal:
          clause_template:
            SELECT *,  ROW_NUMBER() OVER(ORDER BY value) AS sorter
            FROM (
            SELECT '{title}' AS what, "{field}" AS value, COUNT(*) AS num
            FROM data
            GROUP BY "{field}"
            )

          fields:
            מגדר: מגדר
            "תפקידך במערכת החינוך:": תפקיד
            "שם בית הספר": בית ספר

        range:
          clause_template:
            SELECT '{title}' AS what, '{bottom}-{top}' AS value,
            COUNT(*) AS num, '{bottom:03}' as sorter
            FROM data
            WHERE "{field}" >= {bottom} and "{field}" < {top}

          fields:
            "שנות ותק בחינוך/בהוראה": ותק בחינוך
            "שנות וותק במערכת החינוך במועצה איזורית אשכול": ותק במ״א אשכול

          range_pts: [0,2,5,10,20,150]
          
      main_metric_clause_template:
        SELECT '{field_name}' AS what, 
               (SELECT SUM(IIF("{field_name}" = 3, 1., 0.)) / COUNT("{field_name}") FROM data) AS top_pct,
               "{field_name}" AS category,
               COUNT("{field_name}") as cat_count
        FROM data
        GROUP BY category

      sub_metric_clause_template:
        SELECT '{sub_field_name}' AS what, 
               (SELECT SUM(IIF("{field_name}" = 3, 1., 0.)) / COUNT("{field_name}") FROM data) AS top_pct,
               "{field_name}" AS category,
               COUNT("{field_name}") as cat_count
        FROM data
        GROUP BY category

      option_set_clause_template:
        SELECT '{field_title}' AS what, SUM("{field_name}") AS num
        FROM data

      option_set_summary_template:
        SELECT what, num
        FROM ({query})
        ORDER BY num DESC
        LIMIT {limit}

    # Last are the definitions used for presentation in
    # the generated charts        
    metrics:
      static:
        library: vega-lite
        title: מדדי שלומות  # default, for main
        # insert query
        display:
          mark: { type: bar, tooltip: true }
              
          encoding:
            x:
              field: cat_count
              type: quantitative
              title: 'אחוז בקטגוריה'
              # scale: {"domain": [0.,100.]}
              stack: normalize
            y:
              field: what
              type: nominal
              title: מדד
              sort: { "field": top_pct, op: "mean", order: "descending" }
              legend:
                direction: horizontal
                orient: top
            color:
              field: category
              type: ordinal
              legend: null
              scale:
                domain: [1, 2, 3]
                range: ["#c71212", "#faf614", "#1dc70e"]

    option_set:
      static:
        library: vega-lite
        # insert title
        # insert query
        display:
          mark: { type: bar, tooltip: true }
          height: 400
          # transform:
          #   - calculate: "replace(datum.what,
          #     'אחר (נא',
          #     '‏אחר (נא'
          #     )"
          #     # The replacement has a RLM, to make values that
          #     # start with this string last in order
          #     as: sorter
          encoding:
            y:
              field: num
              scale:
                domain:
                  - 0
                  - 100
              title: 'מספר'
              type: quantitative
            x:
              field: what # sorter
              type: nominal
              # title to be inserted here
              sort: "-y"
            # color:
            #   field: what # sorter
            #   type: nominal
            #   # title to be inserted here
            #   legend:
            #     direction: vertical
            #     orient: top
            #     # labelAlign: right
            #     labelLimit: 320

    option_set_desc:
      static:
        library: markdown
        settings:
          extensions:
            - extra
          extra_attrs:
            "*":
              - class
              - dir

    filter_stats:
      static:
        library: vega-lite
        title: דמוגרפיה
        # insert query
        display:
          mark: { type: bar, tooltip: true }
          transform: 
            - filter:
                "datum.value!==null"
          encoding:
            y:
              field: num
              # scale:
              #   domain:
              #     - 0
              #     - 100
              title: 'מספר'
              type: quantitative
            x:
              field: what
              type: nominal
            color:
              field: value
              type: nominal
              sort: { field: sorter } # This doesn't work
