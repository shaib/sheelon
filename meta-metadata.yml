preamble:
  title: ניתוח שאלון שלומות
  description_html: |-
    <p>הצגה של נתונים מתוך שאלון שלמות, עם אפשרות לחיתוכים.</p>
    <ul>
      <li>זוהי גרסה ראשונית בלבד</li>
    </ul>

  databases: "We place the key early, but value will be rewritten"

  allow:
    id:
      - superuser
      - root

  plugins:
    datasette-auth-passwords:
      superuser_password_hash:
        $env: PASSWORD_HASH_SUPER_1

dashboard:
  name: shlomut
  static:
    title: שאלון שלומות
    description: שאלון עם דמוגרפיה
    filters:
      # This defines the editable fields at the top. The keys here
      # ('a_gender', 'b_vetekedu_low' etc) are used in the queries
      # for including the field values as variables. The order
      # of fields on top is the order of names, hence "a_" etc.
      # The titles of columns in the CSV files are not part of
      # this definition, they're only in the query (see below).
      a_gender:
        name: מגדר
        type: select
        options: ["1", "2", "3"]
      b_vetekedu_low:
        name: מינ ותק בחינוך
        type: number
        min: 0
        max: 100
        step: 1
      c_vetekedu_high:
        name: מקס ותק בחינוך
        type: number
        min: 0
        max: 100
        step: 1
      d_vetekhoraa_low:
        name: מינ ותק בהוראה
        type: number
        min: 0
        max: 100
        step: 1
      e_vetekhoraa_high:
        name: מקס ותק בהוראה
        type: number
        min: 0
        max: 100
        step: 1
      f_tafkid:
        name: תפקיד
        type: select
        options: ['1', '2', '3', '4', '5', '6', '7', '8', '9']
      g_school:
        name: בית ספר
        type: select
        options: ['1', '2', '3', '4', '5', '6', '7']

    charts:
      # This chart, defined by Markdown, is constant
      t1:
        library: markdown
        display: |-
          # שאלון שלומות
          > על בסיס שאלון מעובד
    layout:
      # Every row says which charts are in it
      # A '.' means "no chart in this spot"
      # t1 is defined above, "main_metrics" is defined
      # dynamically by code, and the code also adds more
      # charts and extends the layout to include them
      - [t1, '.']
      - [main_metrics, '.']
          
  generate:
    # Under "query" are the definitions used to fetch the data
    # for each generated chart
    query:
      # The preamble is included in every query. It's a template
      # here because the name of the database table is a parameter
      # the parts in [[ ]] are added by the dashboards system, at
      # runtime, only when the relevant filter is set
      #
      # The lower parts of the preamble (from "t AS (SELECT" to
      # the end) take care of not showing data when there are
      # too little results
      preamble_template: WITH
        filtered AS (
          SELECT * FROM "{table_name}" WHERE TRUE
            [[ AND "SEX" = :a_gender ]]
            [[ AND "VETEKEDU" >= :b_vetekedu_low ]]
            [[ AND "VETEKEDU" <= :c_vetekedu_high ]]
            [[ AND "VETEKHORAA"  >= :d_vetekhoraa_low ]]
            [[ AND "VETEKHORAA"  <= :e_vetekhoraa_high ]]
            [[ AND "TAFKID" = :f_tafkid ]]
            [[ AND "SCHOOL" = :g_school ]]
          ),
        t AS (SELECT COUNT(*) AS total_count FROM filtered),
        data AS (
          SELECT filtered.* FROM filtered CROSS JOIN t WHERE total_count>5
        )
      # These define the data fetched for each chart (by columns)
      main_metric_clause_template:
        SELECT '{field_name}' AS what, 
               (SELECT SUM(IIF("{field_name}" = 3, 1., 0.)) / COUNT("{field_name}") FROM data) AS top_pct,
               "{field_name}" AS category,
               COUNT("{field_name}") as cat_count
        FROM data
        GROUP BY category
      sub_metric_clause_template:
        SELECT '{sub_field_name}' AS what, 
               (SELECT SUM(IIF("{field_name}" = 3, 1., 0.)) / COUNT("{field_name}") FROM data) AS top_pct,
               "{field_name}" AS category,
               COUNT("{field_name}") as cat_count
        FROM data
        GROUP BY category

    # Under "metrics" are the definitions used for presentation in
    # the generated charts
    metrics:
      static:
        library: vega-lite
        title: מדדי שלומות  # default, for main
        # insert query
        display:
          mark: { type: bar, tooltip: true }
              
          encoding:
            x:
              field: cat_count
              type: quantitative
              title: 'אחוז בקטגוריה'
              # scale: {"domain": [0.,100.]}
              stack: normalize
            y:
              field: what
              type: nominal
              title: מדד
              sort: { "field": top_pct, op: "mean", order: "descending" }
              legend:
                direction: horizontal
                orient: top
            color:
              field: category
              type: ordinal
              legend: null
              scale:
                domain: [1, 2, 3]
                range: ["#c71212", "#faf614", "#1dc70e"]
